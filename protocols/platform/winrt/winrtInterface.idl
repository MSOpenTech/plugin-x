import "inspectable.idl";
import "Windows.Foundation.idl";

#define COMPONENT_VERSION 1.0


namespace winrtInterface
{

	interface IPluginParam;
	[uuid(DEF6D397-BDCA-49AC-B8E4-01626BCB9C51), version(COMPONENT_VERSION)]
	interface IPluginParam: IInspectable
	{
		//HRESULT getCurrentType([out, retval] int* result);
	}




    interface IProtocol;
    [uuid(64b0eac7-f5e7-4787-90a2-940f5297570a), version(COMPONENT_VERSION)]
    interface IProtocol : IInspectable
    {
        HRESULT getPluginVersion([out, retval] HSTRING *value);
        HRESULT getSDKVersion([out, retval] HSTRING *value);
        HRESULT setDebugMode([in] boolean bDebug);
        HRESULT callFuncWithParam([in] HSTRING funcName, [in] Windows.Foundation.Collections.IVector<IPluginParam*>* params); 
		HRESULT callStringFuncWithParam([in] HSTRING funcName, [in] Windows.Foundation.Collections.IVector<IPluginParam*>* params, [out, retval] HSTRING* result);
		HRESULT callIntFuncWithParam([in] HSTRING funcName, [in] Windows.Foundation.Collections.IVector<IPluginParam*>* params, [out, retval] int* result);
		HRESULT callBoolFuncWithParam([in] HSTRING funcName, [in] Windows.Foundation.Collections.IVector<IPluginParam*>* params, [out, retval] boolean* result);
		HRESULT callFloatFuncWithParam([in] HSTRING funcName, [in] Windows.Foundation.Collections.IVector<IPluginParam*>* params, [out, retval] float* result);
    }

    interface IProtocolAnalytics;
    [uuid(666997f8-53a1-4c9c-b7c7-e7b3f248e9f5), version(COMPONENT_VERSION)]
    interface IProtocolAnalytics : IInspectable
    {
        HRESULT startSession([in] HSTRING appKey);
        HRESULT stopSession();
        HRESULT setSessionContinueMillis([in] int millis);
        HRESULT logError([in] HSTRING errorId, [in] HSTRING message);
        HRESULT logEvent([in] HSTRING eventId, [in] Windows.Foundation.Collections.IMap<HSTRING, HSTRING>* paramMap);
        HRESULT logTimedEventBegin([in] HSTRING eventId);
        HRESULT logTimedEventEnd([in] HSTRING eventId);
        HRESULT setCaptureUncaughtException([in] boolean enabled);
    }

	// enums need to be kept up to date with their c++ implementations
    [version(COMPONENT_VERSION)]
    typedef [v1_enum, public] enum IAPProductRequestEnum {
            RequestSuccess = 0,
            RequestFail,
            RequestTimeout
    } IAPProductRequestEnum;

    [version(COMPONENT_VERSION)]
    typedef [v1_enum, public] enum PayResultCodeEnum {
            kPaySuccess = 0,
            kPayFail,
            kPayCancel,
            kPayTimeOut
    } PayResultCodeEnum;

    typedef Windows.Foundation.Collections.IMap<HSTRING, HSTRING>* StringMap;
    // typedef Windows.Foundation.Collections.IVector<StringMap>* StringMapVector;

    /*
    interface IPayResultListener;
    [uuid(50D6B05C-B403-46FB-B273-BD04C8AEDB57), version(COMPONENT_VERSION)]
    interface IPayResultListener : IInspectable
    {
        HRESULT onPayResult([in] PayResultCodeEnum ret, [in] HSTRING msg, [in] StringMap info);
        HRESULT onRequestProductResult([in] IAPProductRequestEnum ret, [in] Windows.Foundation.Collections.IVector<Windows.Foundation.Collections.IMap<HSTRING, HSTRING>*>* info);
    }

    */
    interface IProtocolIAP;
    [uuid(74436BAA-2B54-487B-AA90-A60C1CFBC70F), version(COMPONENT_VERSION)]
    interface IProtocolIAP : IInspectable
    {
        HRESULT configDeveloperInfo([in] Windows.Foundation.Collections.IMap<HSTRING, HSTRING>* devInfo);
        HRESULT payForProduct([in] Windows.Foundation.Collections.IMap<HSTRING, HSTRING>* info);
        //HRESULT setResultListener([in] IPayResultListener* pListener);
        //HRESULT onPayResult([in] PayResultCodeEnum ret, [in] HSTRING msg);
    }

    interface IPluginReceiver;
    [uuid(1812A486-9E67-4F59-A2B9-978AA7D14A5D), version(COMPONENT_VERSION)]
    interface IPluginReceiver : IInspectable {
        
    }


}






















